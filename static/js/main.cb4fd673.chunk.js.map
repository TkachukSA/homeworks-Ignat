{"version":3,"sources":["p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/AlternativeMessage.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Greeting","name","setNameCallback","addUser","error","totalUsers","inputClass","s","errorClass","bottomClass","someClass","totaluserstyp","total","value","onChange","className","onClick","GreetingContainer","users","addUserCallback","useState","setName","setError","length","e","currentTarget","alert","HW3","setUsers","userclass","newUsers","_id","v1","map","user","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","Message","props","item","src","avatar","message","time","AlternativeMessage","balloon","arrow","messageData","HW1","Affair","cellSpacing","affair","priority","id","deleteAffairCallback","Affairs","data","a","setFilter","defaultAffairs","HW2","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.cb4fd673.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__uGflL\",\"errorClass\":\"Greeting_errorClass__132GU\",\"error\":\"Greeting_error__1uvQ8\",\"total\":\"Greeting_total__1Lsfv\",\"userclass\":\"Greeting_userclass__3Ylc4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Message_item__3o67J\",\"balloon\":\"Message_balloon__3y8r6\",\"arrow\":\"Message_arrow__1Eiov\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3XH9u\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__l4fwN\"};","import React, {DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./Greeting.module.css\";\n\ntype GreetingPropsType = {\n    name: string\n    setNameCallback: (e: React.ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void\n    error: string | null // need to fix any\n    totalUsers: number\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error? s.error : s.errorClass\n    const bottomClass = error? s.error: s.someClass\n    const totaluserstyp =  s.total// need to fix with (?:)\n\n\n    return (\n        <div>\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\n            <span>{error}</span>\n            <button onClick={addUser} className={bottomClass}>add</button>\n            <span className={totaluserstyp}>{totalUsers}</span>\n\n\n        </div>\n    );\n}\n\nexport default Greeting;\n","import React, {ChangeEvent, useState} from \"react\";\nimport Greeting from \"./Greeting\";\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n    users: Array<UserType> // need to fix any\n    addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>(\"\"); // need to fix any\n    const [error, setError] = useState<string|null>(null); // need to fix any\n\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n\n        setName(e.currentTarget.value)\n        if (e.currentTarget.value !== \"\") {\n            setError(\"\")\n\n        } else {\n            setError(\"errors\")\n        }\n\n    };\n\n\n    const addUser = () => {\n        if (name !== \"\") {\n            addUserCallback(name)\n            alert('hi ' + name);\n        } else {\n            setError(\"error message\")\n        }\n        setName(\"\")\n\n\n    }\n\n\n    let totalUsers = users.length;\n\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    );\n}\n\nexport default GreetingContainer;\n","import React, {useState} from \"react\";\nimport GreetingContainer from \"./GreetingContainer\";\nimport {v1} from \"uuid\";\nimport s from \"./Greeting.module.css\"\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\nfunction HW3() {\n\n    const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\n\n    const addUserCallback = (name: string) => {\n\n        let newUser = {_id: v1(), name: name}\n        let newUsers = [newUser, ...users]\n        setUsers(newUsers);\n\n\n    }\n    const userclass = s.userclass\n\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n\n            <GreetingContainer users={users}\n                               addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {users.map(user => <div className={userclass}>{user.name}</div>)}\n\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW3;\n\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = error ? `${s.errorInput}` : s.superInput; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n\n onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n\n\n\n            // если есть пропс onChange\n\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport s from \"./HW4.module.css\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"error\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                   /* className={s.blue} */ // className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    {\"Did you give your name?\"}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React from \"react\";\nimport s from \"./Message.module.css\"\n\nexport type MessagePropsType ={\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\n\nfunction Message(props: MessagePropsType) {\n    return (\n        <div className={s.item} >\n      <img src={props.avatar}/>\n            <div> {props.name}</div>\n            <div>{props.message} </div>\n            <div>{props.time} </div>\n            <br/>\n\n        </div>\n    );\n}\n\nexport default Message;\n","import React from \"react\";\nimport s from \"./Message.module.css\";\n\nfunction AlternativeMessage() {\n    return (\n        <div>\n            <div><p className={s.balloon}>\n                <span className={s.arrow}>&nbsp;</span>\n                <p> <b>Артем</b> <br/>\n                npm start нажимал?</p>\n\n\n            </p></div>\n        </div>\n    );\n}\n\nexport default AlternativeMessage;\n","import React from \"react\";\nimport Message from \"./Message\";\nimport AlternativeMessage from \"./AlternativeMessage\"\n\n\nconst messageData = {\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\n    name: \"Some Name\",\n    message: \"some text\",\n    time: \"22:00\",\n};\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            <AlternativeMessage/>\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW1;\n","import React from \"react\";\nimport {AffairType} from \"./HW2\";\nimport \"./Affairs.module.css\"\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType\n    deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n\n    const deleteCallback = (id: number) => {\n        props.deleteAffairCallback(id)\n    }\n\n    return (\n        <div className=\"someClass\">\n            <table cellSpacing=\"2\">\n\n\n\n            <tr><td>{props.affair._id}</td><td>{props.affair.name}</td><td>{props.affair.priority}</td><button\n                onClick={()=> deleteCallback(props.affair._id)}>X</button> </tr>\n\n\n        </table>\n\n      {/*     <div><span>{props.affair._id}</span> <span>{props.affair.name}</span> <span>{props.affair.priority}</span>*/}\n\n{/*<button onClick={()=> deleteCallback(props.affair._id)}>X</button></div>*/}\n        </div>\n    );\n}\n\nexport default Affair;\n","import React from \"react\";\nimport Affair from \"./Affair\";\nimport {AffairType, FilterType} from \"./HW2\";\nimport  s from \"./Affairs.module.css\"\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (value: FilterType) => void\n    deleteAffairCallback: (_id :number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\ndebugger\n    const setAll = () => {props.setFilter('all')};\n    const setHigh = () => {props.setFilter('high')};\n    const setMiddle = () => {props.setFilter('middle')};\n    const setLow = () => {props.setFilter('low')};\n\n    return (\n        <div>\n\n            <div>\n                {props.data.map((a: AffairType) => (\n                <Affair // should work\n                    key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n                    affair={a}\n                    deleteAffairCallback={props.deleteAffairCallback}/>))}\n            </div>\n\n            <button onClick={setAll}>All</button>\n            <button onClick={setHigh}>High</button>\n            <button onClick={setMiddle}>Middle</button>\n            <button onClick={setLow}>Low</button>\n        </div>\n    );\n}\n\nexport default Affairs;\n","import React, {useState} from \"react\";\nimport Affairs from \"./Affairs\";\n\n// types\nexport type AffairPriorityType =  \"high\" | \"middle\" | \"low\" | \"all\"; // need to fix any\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: AffairPriorityType\n};\nexport type FilterType = \"all\" | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n    {_id: 1, name: \"React\", priority: \"high\"},\n    {_id: 2, name: \"anime\", priority: \"low\"},\n    {_id: 3, name: \"games\", priority: \"low\"},\n    {_id: 4, name: \"work\", priority: \"high\"},\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n    if (filter === \"all\") return affairs;\n    if (filter === 'high') return affairs.filter(a => a.priority === 'high')\n    if (filter === 'low') return affairs.filter(a => a.priority === 'low')\n    if (filter === 'middle') return affairs.filter(a => a.priority=== 'middle')\n    else return affairs;\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> =>\n    affairs.filter(a => a._id !== _id)\n\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\n    const [filter, setFilter] = useState<FilterType>(\"all\");\n\n    const filteredAffairs = filterAffairs(affairs, filter);\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should w ork (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW2;\n","import React from \"react\";\nimport s from \"./App.module.css\";\n\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW5/>*/}\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}